import{_ as s,c as i,o as a,a5 as e}from"./chunks/framework.B9ajF9kL.js";const F=JSON.parse('{"title":"日期和时间","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"zh/debian/system/time.md","filePath":"zh/debian/system/time.md"}'),t={name:"zh/debian/system/time.md"},l=e(`<h1 id="日期和时间" tabindex="-1">日期和时间 <a class="header-anchor" href="#日期和时间" aria-label="Permalink to &quot;日期和时间&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">声明</p><p>本页面正在施工中，部分内容还不完善，仅供参考，有不足之处敬请指出</p><p>欢迎在我们的GitHub仓库提交pr以添加内容或修正不足</p></div><p>系统中通常存在两种时间：软件时间和硬件时间。一个操作系统通过如下内容确定时间：时间数值、时间标准、时区和夏令时调节(中国已废止)。本文分别介绍各个部分的定义及如何设置他们.</p><p>大部分操作系统的时间管理包括如下方面：</p><ul><li>启动时根据硬件时钟设置系统时间</li><li>运行时通过时间同步联网校正时间</li><li>关机时根据系统时间设置硬件时间</li></ul><h2 id="时间标准" tabindex="-1">时间标准 <a class="header-anchor" href="#时间标准" aria-label="Permalink to &quot;时间标准&quot;">​</a></h2><p>时间表示有两个标准：localtime 和 UTC(Coordinated Universal Time) 。localtime 标准则依赖于当前时区。UTC 是与时区无关的全球时间标准。尽管概念上有差别，UTC 和 GMT (格林威治时间) 是一样的。</p><p>硬件所使用的时间标准由操作系统设定，Windows 默认使用 localtime，。使用 Linux 时，最好将硬件时钟设置为 UTC 标准，并在所有操作系统中使用。这样 Linux 系统就可以自动调整夏令时设置，而如果使用 localtime 标准那么系统时间不会根据夏令时自动调整。</p><h2 id="硬件时钟" tabindex="-1">硬件时钟 <a class="header-anchor" href="#硬件时钟" aria-label="Permalink to &quot;硬件时钟&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>更多有关硬件时钟设置，参考<a href="https://manpages.debian.org/man/8/hwclock" target="_blank" rel="noreferrer">hwlock manual page</a></p></div><p>硬件时钟（即实时时钟 CMOS 时钟）仅能保存：年、月、日、时、分、秒这些时间数值，无法保存时间标准（UTC 或 localtime）。在2016年及以后的 UEFI 固件上支持保存是否使用夏令时。</p><h3 id="读取硬件时钟" tabindex="-1">读取硬件时钟 <a class="header-anchor" href="#读取硬件时钟" aria-label="Permalink to &quot;读取硬件时钟&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hwclock</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --show</span></span></code></pre></div><h3 id="将系统时钟设置到硬件时钟" tabindex="-1">将系统时钟设置到硬件时钟 <a class="header-anchor" href="#将系统时钟设置到硬件时钟" aria-label="Permalink to &quot;将系统时钟设置到硬件时钟&quot;">​</a></h3><p>下面命令将系统时钟设置到硬件时钟，同时会创建或更新<code>/etc/adjtime</code>。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hwclock</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --systohc</span></span></code></pre></div><h2 id="系统时钟" tabindex="-1">系统时钟 <a class="header-anchor" href="#系统时钟" aria-label="Permalink to &quot;系统时钟&quot;">​</a></h2><p>系统时钟（即软件时间）与硬件时间分别维护，保存了时间、时区和夏令时设置。Linux 内核保存为自 UTC 时间 1970 年1月1日经过的秒数。初始系统时钟是从硬件时间计算得来，计算时会考虑<code>/etc/adjtime</code>的设置。系统启动之后，系统时钟与硬件时钟独立运行，Linux 通过时钟中断计数维护系统时钟。</p><h3 id="读取系统时间配置" tabindex="-1">读取系统时间配置 <a class="header-anchor" href="#读取系统时间配置" aria-label="Permalink to &quot;读取系统时间配置&quot;">​</a></h3><p>终端运行以下命令以获取系统时间以及相关配置：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span></span></code></pre></div><p>输出如下</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># timedatectl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">               Local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2024-08-24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 21:14:59</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CST</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">           Universal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2024-08-24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 13:14:59</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UTC</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                 RTC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2024-08-24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 13:14:59</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zone:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Asia/Shanghai</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (CST, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+0800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clock</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> synchronized:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              NTP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                   </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          RTC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TZ:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span></code></pre></div><p>当然也可以通过直接读取<code>/etc/adjtime</code>来获得系统时间配置</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/adjtime</span></span></code></pre></div><h3 id="设置系统时间" tabindex="-1">设置系统时间 <a class="header-anchor" href="#设置系统时间" aria-label="Permalink to &quot;设置系统时间&quot;">​</a></h3><p>系统时间可以通过<code>date</code>命令设置，也可使用<code>timedatectl</code>进行管理。当然，lingmoOS在控制中心中提供了使用GUI程序设置系统时间的方式。</p><h4 id="使用timedatectl" tabindex="-1">使用timedatectl <a class="header-anchor" href="#使用timedatectl" aria-label="Permalink to &quot;使用timedatectl&quot;">​</a></h4><p>设置系统时间的本地时间：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;yyyy-MM-dd hh:mm:ss&quot;</span></span></code></pre></div><p>例如：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2009-11-25 11:45:14&quot;</span></span></code></pre></div><p>这个命令设置时间为2009年11月25日11时45分14秒。</p><h4 id="使用date命令" tabindex="-1">使用date命令 <a class="header-anchor" href="#使用date命令" aria-label="Permalink to &quot;使用date命令&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>date</code>属于较为老旧的设施，一般更建议使用<code>timedatectl</code>，或使用GUI程序进行配置。</p></div><p>以下命令可设置系统日期和时间：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MMDDhhmmYYYY</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #设置日期时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yyyy-MM-dd</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #仅设置日期</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hh:mm:ss</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #仅设置时间</span></span></code></pre></div><p>当直接使用<code>date</code>手动设置系统时间时，所需的时间格式根据POSIX规范必须是<code>月日时分年</code>（如上所示），但是，当使用<code>--set</code>参数时，date接受多种格式的日期和时间。上面的—<code>--set</code>参数示例在ISO 8601标准的扩展格式中指定为<code>YYYY-MM-DD</code>和<code>HH:MM:SS</code>（使用24小时制，不足位补0）。</p><h4 id="使用系统设置" tabindex="-1">使用系统设置 <a class="header-anchor" href="#使用系统设置" aria-label="Permalink to &quot;使用系统设置&quot;">​</a></h4><p>lingmoOS在系统的“设置”应用中提供了相关的页面来配置系统时间。</p><h2 id="多系统时间" tabindex="-1">多系统时间 <a class="header-anchor" href="#多系统时间" aria-label="Permalink to &quot;多系统时间&quot;">​</a></h2><p>如果机器上安装多个操作系统，硬件使用的是本地时间，可能多个操作系统都进行夏令时调整，导致时间错乱。计算机在多个时区切换时，也会出现问题。 所以建议多系统用户统一使用 UTC 时间。</p><h3 id="lingmoos的时间方案配置" tabindex="-1">LingmoOS的时间方案配置 <a class="header-anchor" href="#lingmoos的时间方案配置" aria-label="Permalink to &quot;LingmoOS的时间方案配置&quot;">​</a></h3><p>通过<code>timedatectl</code>可以查看设置系统时间. 终端键入以下命令查看系统当前硬件时钟的时间标准：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local</span></span></code></pre></div><p>一般情况下，Linux系统当前硬件时钟的时间标准是UTC 若返回结果不是UTC而是localtime，以下命令硬件时间设置成 UTC：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-local-rtc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div><p>上述命令会自动配置或生成<code>/etc/adjtime</code>，无需单独设置。</p><p>系统启动装入 rtc 驱动时可能会根据系统时钟设置硬件时钟。是否设置依赖于平台、内核版本和内核编译选项。如果进行了设置，此时会假定硬件时钟为 UTC 标准，<code>/sys/class/rtc/rtcN/hctosys</code>N的值会设置为1。</p><p>配置后 systemd 会根据<code>/etc/adjtime</code>重新设置。所以使用当地时间作为硬件时钟时，可能在启动过程中导致系统时间反复变更。所以从 systemd 216 版本开始，如果 RTC 设置为本地时间， systemd 不会将时间回写，因为这样会引起 windows 时间错乱。systemd 也不会将当前时区信息传递给内核，这意味着 FAT 时间戳将统一按 UTC 时间处理。</p><h3 id="windows下的时间方案配置" tabindex="-1">Windows下的时间方案配置 <a class="header-anchor" href="#windows下的时间方案配置" aria-label="Permalink to &quot;Windows下的时间方案配置&quot;">​</a></h3><p>Windows 一般使用 RTC 作为地方时。Windows 其实也能处理 UTC，需要修改注册表。建议让 Windows 使用 UTC，而非让 Linux 使用地方时。Windows 使用 UTC 后，请记得禁用 Windows 的时间同步功能，以防 Windows 错误设置硬件时间。可以在 Linux 下使用 NTP 服务实现时间同步（lingmoOS已默认配置）。</p><p>使用 regedit ，新建如下 DWORD 值，并将其值设为十六进制的 1。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\\RealTimeIsUniversal</span></span></code></pre></div><p>也可以用管理员权限启动命令行来完成：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reg add </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RealTimeIsUniversal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t REG_DWORD </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span></code></pre></div><p>或者，创建 utc.reg 文件，写入以下内容，并双击运行以将其内容导入到注册表：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Windows Registry Editor Version 5.00</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation]</span></span>
<span class="line"><span>&quot;RealTimeIsUniversal&quot;=dword:00000001</span></span></code></pre></div><p>如果 Windows 要求根据夏令时更新时钟，可以允许。时钟仍然是 UTC，仅是显示时间会改变。</p><p>设置时间标准后需要重新设置硬件时间和系统时间。</p><p>如果你有时间偏移问题，重新安装tzdata包 并再次设置你的时区:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-timezone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Asia/Shanghai</span></span></code></pre></div><h4 id="一些历史遗留问题" tabindex="-1">一些历史遗留问题 <a class="header-anchor" href="#一些历史遗留问题" aria-label="Permalink to &quot;一些历史遗留问题&quot;">​</a></h4><p>对于较老的Windows，由于Windows的bug，以上方法并不管用。详情如下：</p><ul><li>对于64位Windows 7和较老的Windows 10，有一个错误使得我们必须使用十六进制值为1的QWORD值而不是DWORD值。这个错误在新版本中已经修复，现在只需DWORD值即可。</li><li>在Vista SP2之前，有一个bug使得从挂起或休眠状态恢复后时钟被重置为本地时间。</li><li>对于XP和更早的版本的Windows，有一个与夏令时相关的bug。<a href="https://mskb.pkisolutions.com/kb/2687252" target="_blank" rel="noreferrer">参见</a></li><li>对于更老版本的Windows，您可能想要阅读<a href="https://www.cl.cam.ac.uk/~mgk25/mswish/ut-rtc.html" target="_blank" rel="noreferrer">https://www.cl.cam.ac.uk/~mgk25/mswish/ut-rtc.html</a>。该功能甚至没有文档记录，也没有官方支持。</li></ul><p>对于这些Windows版本，我们还是建议使用localtime作为硬件时间。</p><h2 id="时区" tabindex="-1">时区 <a class="header-anchor" href="#时区" aria-label="Permalink to &quot;时区&quot;">​</a></h2><p>在LingmoOS安装时已经要求配置了正确的时区，若您前往了不同的地区，可以通过以下方式配置时区。</p><p>以下是timedatectl有关时区的用法：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #检查当前时区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-timezones</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #显示可用时区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-timezone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Zon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SubZon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #修改时区</span></span></code></pre></div><p>当然，LingmoOS也在“设置”应用里提供了图形化检查和设置时区的方法。</p><div class="warning custom-block"><p class="custom-block-title">一些值得注意的点</p><ul><li>我们中国人更熟悉的时区是“北京时间”，但是不建议将时区设置为<code>Asia/Beijing</code>，而应当设置为<code>Asia/Shanghai</code>，这是因为<code>Asia/Beijing</code>并不是中国的IANA时区标识符，虽然LingmoOS采取了一些措施来规避可能的危害，但这并不能避免一些第三方应用因读取了错误的时区而导致混乱。</li><li>使用<code>timedatectl</code>或使用LingmoOS“设置”应用修改时区时会创建一个<code>/etc/localtime</code>软链接，指向<code>/usr/share/zoneinfo/</code>中的时区文件，手动创建时（例如 chroot 中无法执行 timedatectl）此链接请确保是相对链接而不是绝对链接。</li></ul></div><h3 id="基于地理位置设置时区" tabindex="-1">基于地理位置设置时区 <a class="header-anchor" href="#基于地理位置设置时区" aria-label="Permalink to &quot;基于地理位置设置时区&quot;">​</a></h3><p>要根据IP地址位置自动设置时区，可以使用地理位置API来检索时区，并将输出传递给<code>timedatectl set-timezone</code>以进行自动设置，例如<code>curl https://ipapi.co/timezone | timedatectl set-timezone</code>。以下是一些提供免费或部分免费服务的地理ip api（有的可能需要魔法）：</p><ul><li><a href="https://www.abstractapi.com/ip-geolocation-api" target="_blank" rel="noreferrer">Abstract IP geolocation API</a></li><li><a href="https://freegeoip.app/" target="_blank" rel="noreferrer">FreegeoIP</a></li><li><a href="https://ip-api.com/" target="_blank" rel="noreferrer">IP-api</a></li><li><a href="https://ipapi.co/" target="_blank" rel="noreferrer">IPAPI</a></li><li><a href="https://ipdata.co/" target="_blank" rel="noreferrer">Ipdata</a></li><li><a href="https://ipstack.com/" target="_blank" rel="noreferrer">Ipstack</a></li><li><a href="https://timezoneapi.io/" target="_blank" rel="noreferrer">TimezoneApi</a></li></ul><h3 id="每次联网时获得时区" tabindex="-1">每次联网时获得时区 <a class="header-anchor" href="#每次联网时获得时区" aria-label="Permalink to &quot;每次联网时获得时区&quot;">​</a></h3><p>创建一个 NetworkManager dispatcher script：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/NetworkManager/dispatcher.d/09-timezone</span></span></code></pre></div><p>然后按<code>i</code>键在vim中插入以下内容（<code>&lt;url-to-your-ip-api&gt;</code>为api的地址）</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">case</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">    up</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-timezone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fail</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">url-to-your-ip-api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">esac</span></span></code></pre></div><p>输入<code>:wq</code>保存，重启。</p><h2 id="时间偏移" tabindex="-1">时间偏移 <a class="header-anchor" href="#时间偏移" aria-label="Permalink to &quot;时间偏移&quot;">​</a></h2><p>最能代表“真实时间”的是<a href="https://baike.baidu.com/item/%E5%9B%BD%E9%99%85%E5%8E%9F%E5%AD%90%E6%97%B6" target="_blank" rel="noreferrer">国际原子时</a>，所有的时钟都是有误差的。电子时钟的时间是不准的，但是一般有固定的偏移。这种于基值的差称为“时间偏移”。用<code>hwclock</code>设置硬件时间时，会计算每天偏移的秒数。偏移值是原硬件时间与新设置硬件时间的差，并且考虑上次硬件时间设置时的偏移。新的偏移值会在设置时钟时写到文件<code>/etc/adjtime</code>。</p><p>如果硬件时间值与原值的差小于 24 小时，偏移量不会重新计算，因为时间过短，无法精确设置偏移。</p><p>如果硬件时钟总是过快或过慢，可能是计算了错误的偏移值。硬件时钟设置错误或者时间标准与其他操作系统不一致导致。删除文件<code>/etc/adjtime</code>可以删除偏移值，然后设置正确的硬件时钟和系统时钟，并检查时间标准是否设置正确。</p>`,85),n=[l];function h(p,d,k,o,r,c){return a(),i("div",null,n)}const u=s(t,[["render",h]]);export{F as __pageData,u as default};
